{"version":3,"file":"ui.vue.components.smiles.bundle.js","sources":["ui.vue.components.smiles.js"],"sourcesContent":["import \"./ui.vue.components.smiles.css\";\n\n/**\n * Bitrix UI\n * Smiles Vue component\n *\n * @package bitrix\n * @subpackage ui\n * @copyright 2001-2019 Bitrix\n */\n\nBX.Vue.component('bx-smiles',\n{\n\t/**\n\t * @emits 'selectSmile' {text: string}\n\t * @emits 'selectSet' {setId: number}\n\t */\n\tdata()\n\t{\n\t\treturn {\n\t\t\tsmiles: [],\n\t\t\tsets: []\n\t\t}\n\t},\n\tcreated()\n\t{\n\t\tthis.setSelected = 0;\n\t\tthis.serverLoad = false;\n\n\t\tthis.smilesController = new SmileData(this.$root.$bitrixRestClient);\n\t\tthis.smilesController.loadFromCache().then((result) => {\n\t\t\tif (this.serverLoad)\n\t\t\t\treturn true;\n\n\t\t\tthis.smiles = result.smiles;\n\t\t\tthis.sets = result.sets.map((element, index) => {\n\t\t\t\telement.selected = this.setSelected === index;\n\t\t\t\treturn element;\n\t\t\t});\n\t\t});\n\n\t\tthis.smilesController.loadFromServer().then((result) => {\n\t\t\tthis.smiles = result.smiles;\n\t\t\tthis.sets = result.sets.map((element, index) => {\n\t\t\t\telement.selected = this.setSelected === index;\n\t\t\t\treturn element;\n\t\t\t});\n\t\t})\n\t},\n\tmethods:\n\t{\n\t\tselectSet(setId)\n\t\t{\n\t\t\tthis.$emit('selectSet', {setId});\n\n\t\t\tthis.smilesController.changeSet(setId).then((result) => {\n\t\t\t\tthis.smiles = result;\n\t\t\t\tthis.sets.map(set => {\n\t\t\t\t\tset.selected = set.id === setId;\n\t\t\t\t\tif (set.selected)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setSelected = setId;\n\t\t\t\t\t}\n\t\t\t\t\treturn set;\n\t\t\t\t});\n\t\t\t\tthis.$refs.elements.scrollTop = 0;\n\t\t\t});\n\t\t},\n\t\tselectSmile(text)\n\t\t{\n\t\t\tthis.$emit('selectSmile', {text: ' '+text+' '});\n\t\t}\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-ui-smiles-box\">\n\t\t\t<div class=\"bx-ui-smiles-elements-wrap\" ref=\"elements\">\n\t\t\t\t<template v-if=\"!smiles.length\">\n\t\t\t\t\t<svg class=\"bx-ui-smiles-loading-circular\" viewBox=\"25 25 50 50\">\n\t\t\t\t\t\t<circle class=\"bx-ui-smiles-loading-path\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke-miterlimit=\"10\"/>\n\t\t\t\t\t\t<circle class=\"bx-ui-smiles-loading-inner-path\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke-miterlimit=\"10\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t</template>\n\t\t\t\t<template v-else v-for=\"smile in smiles\">\n\t\t\t\t\t<div class=\"bx-ui-smiles-smile\">\n\t\t\t\t\t\t<img v-bx-lazyload :key=\"smile.id\"\n\t\t\t\t\t\t\tclass=\"bx-ui-smiles-smile-icon\"\n\t\t\t\t\t\t\t:data-lazyload-src=\"smile.image\"\n\t\t\t\t\t\t\tdata-lazyload-error-class=\"bx-ui-smiles-smile-icon-error\"\n\t\t\t\t\t\t\t:title=\"smile.name\"\n\t\t\t\t\t\t\t:style=\"{height: (smile.originalHeight*0.5)+'px', width: (smile.originalWidth*0.5)+'px'}\"\n\t\t\t\t\t\t\t@click=\"selectSmile(smile.typing)\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</template>\n\t\t\t</div>\n\t\t\t<template v-if=\"sets.length > 1\">\n\t\t\t\t<div class=\"bx-ui-smiles-sets\">\n\t\t\t\t\t<template v-for=\"set in sets\">\n\t\t\t\t\t\t<div :class=\"['bx-ui-smiles-set', {'bx-ui-smiles-set-selected': set.selected}]\">\n\t\t\t\t\t\t\t<img v-bx-lazyload :key=\"set.id\"\n\t\t\t\t\t\t\t\tclass=\"bx-ui-smiles-set-icon\"\n\t\t\t\t\t\t\t\t:data-lazyload-src=\"set.image\"\n\t\t\t\t\t\t\t\tdata-lazyload-error-class=\"bx-ui-smiles-set-icon-error\"\n\t\t\t\t\t\t\t\t:title=\"set.name\"\n\t\t\t\t\t\t\t\t@click=\"selectSet(set.id)\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</template>\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t</div>\n\t`\n});\n\nclass SmileData\n{\n\tconstructor(restClient)\n\t{\n\t\tif (typeof restClient !== 'undefined')\n\t\t{\n\t\t\tthis.restClient = restClient;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.restClient = new BX.RestClient();\n\t\t}\n\n\t\tthis.db = new BX.IndexedDB('bx-ui-smiles');\n\t\tthis.db.version(1).stores({\n\t\t\tsets: \"id, parentId, name, type, image\",\n\t\t\tsmiles: \"id, setId, name, image, typing, width, height, originalWidth, originalHeight, definition\",\n\t\t});\n\t}\n\n\tloadFromCache()\n\t{\n\t\tlet promise = new BX.Promise();\n\n\t\tlet sets = [];\n\t\tlet smiles = [];\n\n\t\tlet timer = new Date();\n\n\t\tthis.db.transaction('r', this.db.sets, this.db.smiles, () =>\n\t\t{\n\t\t\tthis.db.sets.each(set => {\n\t\t\t\treturn this.db.smiles.where('setId').equals(set.id).first().then(smile => {\n\t\t\t\t\tsets.push({...set, image: smile.image});\n\t\t\t\t}).catch(error => promise.reject(error));\n\t\t\t}).then(() => {\n\t\t\t\treturn this.db.smiles.where('setId').equals(sets[0].id).each(smile => {\n\t\t\t\t\tsmiles.push(smile);\n\t\t\t\t});\n\t\t\t}).then(() => {\n\t\t\t\tlet promiseResult = {sets, smiles};\n\t\t\t\tpromise.resolve(promiseResult);\n\t\t\t}).catch(error => promise.reject(error));\n\t\t});\n\n\t\treturn promise;\n\t}\n\n\tloadFromServer()\n\t{\n\t\tlet promise = new BX.Promise();\n\t\tlet timer = new Date();\n\n\t\tthis.restClient.callMethod('smile.get').then(result =>\n\t\t{\n\t\t\tlet sets = [];\n\t\t\tlet smiles = [];\n\n\t\t\tlet answer = result.data();\n\n\t\t\tlet setImage = {};\n\n\t\t\tanswer.smiles = answer.smiles.map(function(smile){\n\t\t\t\tif (!setImage[smile.setId])\n\t\t\t\t{\n\t\t\t\t\tsetImage[smile.setId] = smile.image;\n\t\t\t\t}\n\n\t\t\t\tlet originalWidth = smile.width;\n\t\t\t\tif (smile.definition == 'HD')\n\t\t\t\t{\n\t\t\t\t\toriginalWidth = originalWidth*2;\n\t\t\t\t}\n\t\t\t\telse if (smile.definition == 'UHD')\n\t\t\t\t{\n\t\t\t\t\toriginalWidth = originalWidth*4;\n\t\t\t\t}\n\n\t\t\t\tlet originalHeight = smile.height;\n\t\t\t\tif (smile.definition == 'HD')\n\t\t\t\t{\n\t\t\t\t\toriginalHeight = originalHeight*2;\n\t\t\t\t}\n\t\t\t\telse if (smile.definition == 'UHD')\n\t\t\t\t{\n\t\t\t\t\toriginalHeight = originalHeight*4;\n\t\t\t\t}\n\n\t\t\t\treturn {...smile, originalWidth, originalHeight}\n\t\t\t});\n\n\t\t\tanswer.sets.forEach(set => {\n\t\t\t\tsets.push({...set, image: setImage[set.id]});\n\t\t\t});\n\n\t\t\tanswer.smiles.forEach(smile => {\n\t\t\t\tif (smile.setId == sets[0].id)\n\t\t\t\t{\n\t\t\t\t\tsmiles.push(smile);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tlet promiseResult = {sets, smiles};\n\n\t\t\tpromise.resolve(promiseResult);\n\n\t\t\tthis.db.smiles.clear().then(() => {\n\t\t\t\treturn this.db.sets.clear().then(() => {\n\t\t\t\t\tthis.db.sets.bulkAdd(sets);\n\t\t\t\t\tthis.db.smiles.bulkAdd(answer.smiles);\n\t\t\t\t}).catch(error => promise.reject(error));\n\t\t\t}).catch(error => promise.reject(error));\n\n\t\t}).catch(error => promise.reject(error));\n\n\t\treturn promise;\n\t}\n\n\tchangeSet(setId)\n\t{\n\t\tlet promise = new BX.Promise();\n\n\t\tthis.db.smiles.where('setId').equals(setId).toArray(smiles => {\n\t\t\tpromise.resolve(smiles);\n\t\t}).catch(error => promise.reject(error));\n\n\t\treturn promise;\n\t}\n}\n\n"],"names":["BX","Vue","component","data","smiles","sets","created","setSelected","serverLoad","smilesController","SmileData","$root","$bitrixRestClient","loadFromCache","then","result","map","element","index","selected","loadFromServer","methods","selectSet","setId","$emit","changeSet","set","id","$refs","elements","scrollTop","selectSmile","text","template","restClient","RestClient","db","IndexedDB","version","stores","promise","Promise","transaction","each","where","equals","first","smile","push","image","catch","error","reject","promiseResult","resolve","callMethod","answer","setImage","originalWidth","width","definition","originalHeight","height","forEach","clear","bulkAdd","toArray"],"mappings":"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"}